import unittest

class Item:
    def __init__(self, value, weight):
        self.value = value
        self.weight = weight
        self.ratio = value / weight

def fractional_knapsack(items, capacity):
    items = sorted(items, key=lambda x: x.ratio, reverse=True)

    total_value = 0.0
    for item in items:
        if capacity >= item.weight:
            total_value += item.value
            capacity -= item.weight
        else:
            total_value += item.ratio * capacity

    return total_value

class TestFractionalKnapsack(unittest.TestCase):
    def test_exact_capacity(self):
        items = [Item(60, 10), Item(100, 20), Item(120, 30)]
        capacity = 50
        result = fractional_knapsack(items, capacity)
        self.assertAlmostEqual(result, 240.0)

if __name__ == "__main__":
    unittest.main(argv=[''], exit=False)
