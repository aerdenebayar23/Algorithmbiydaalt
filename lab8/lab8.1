def min_coins(coins, amount):
    dp_r = {}

    def dp(remaining):
        if remaining < 0:
            return float('inf')  # Impossible case
        if remaining == 0:
            return 0  # No coins needed for amount 0
        if remaining in dp_r:
            return dp_r[remaining]

        dp_r[remaining] = min(dp(remaining - coin) + 1 for coin in coins)
        return dp_r[remaining]

    result = dp(amount)
    return result if result != float('inf') else -1

# Unit test
import unittest

class TestMinCoins(unittest.TestCase):
    def test_cases(self):
        self.assertEqual(min_coins([1, 2, 5], 11), 3)

if __name__ == "__main__":
    unittest.main(argv=[''], exit=False)
